// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  phone         String?
  emailVerified DateTime?
  image         String?
  password      String?
  role          String    @default("USER")
  state         String    @default("Pending")
  accounts      Account[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Product {
  id          String       @id @default(cuid())
  id_product  String?
  name        String?
  brand       String?
  tags        Tag[]
  category    String?
  price       String?
  image       Image[]
  description String?
  link        String?
  type        String?
  color       String?
  button      String?
  power       String?
  connect     String?
  type_key    String?
  create_at   DateTime?
  expires_at  DateTime?
  ProductTag  ProductTag[]
}

model Tag {
  id        String       @id @default(cuid())
  name      String       @unique
  products  ProductTag[]
  Product   Product?     @relation(fields: [productId], references: [id])
  productId String?
}

model ProductTag {
  product   Product @relation(fields: [productId], references: [id])
  productId String
  tag       Tag     @relation(fields: [tagId], references: [id])
  tagId     String

  @@id([productId, tagId])
}

model Image {
  id        String  @id @default(cuid())
  url       String
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model Order {
  id        String    @id @default(cuid())
  name      String
  phone     String
  email     String
  address   String
  note      String?
  payment   String?
  state     String    @default("Pending")
  items     Item[]
  create_at DateTime?
  update_at DateTime?
}

model Item {
  id       String @id @default(cuid())
  orderId  String
  name     String
  price    String
  quantity String
  order    Order  @relation(fields: [orderId], references: [id])

  @@index([orderId], name: "orderIdIndex")
}

model Goal {
  id        String    @id @default(cuid())
  name      String
  value     String
  create_at DateTime?
  update_at DateTime?
}
